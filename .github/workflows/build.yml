# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build Bait-Me

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.1'
        check-latest: true

    - name: Build
      run:
        .\build.bat release

    # Delete-tag-and-release new
    - name: Delete-tag-and-release
      uses: dev-drprasad/delete-tag-and-release@v1.1
      with:
        tag_name: Setup #(required) - The name of the tag to delete. This is expected to be solely the tag name, not the name of a git reference.
        delete_release: true #(optional) default: true - also delete all releases and their assets that are associated to the tag name
        github_token: ${{ secrets.GITHUB_TOKEN }} # (required) - a GitHub token with write access to the repo where tags and releases will be searched and deleted
  
    # Create Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.github_token }}
      with:
        tag_name: Setup
        release_name: Setup
        body: "Release created by GitHub Actions"
        draft: false
        prerelease: false

    # Upload Release Asset
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.github_token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: setup.exe
        asset_name: setup.exe
        asset_content_type: application/zip